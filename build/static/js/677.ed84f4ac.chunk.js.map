{"version":3,"file":"static/js/677.ed84f4ac.chunk.js","mappings":"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","sources":["components/save/index.tsx","components/upload/InputImage.tsx","components/upload/index.tsx","pages/articles/add/index.tsx"],"sourcesContent":["import { Card, Button } from 'antd'\nimport { ClockCircleOutlined, RedoOutlined, SaveOutlined, RollbackOutlined, ArrowLeftOutlined } from '@ant-design/icons';\nimport React from 'react'\nimport './index.less'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport dayjs from 'dayjs';\nimport jwtDecode from 'jwt-decode';\nconst Save = (props: any) => {\n  const token = jwtDecode(localStorage.getItem('token') as string) as object | any;\n  const role_type = token[0].role[0].role_type\n  const { time, showBack, onRefresh, onSave, onBack, onDraft, onPublish } = props\n  const message = time ? `上次保存时间：${dayjs(time * 1000).format('YYYY-MM-DD HH:mm:ss')}` : `暂无操作`\n  const goBack = () => {\n    // 返回上一步\n    props.history.goBack()\n  }\n  const width = props.isCollapsed ? `calc(100% - 128px)` : `calc(100% - 248px)`;\n\n  return (\n    <div>\n      <Card className='save_card' bordered={false} style={{ width: width }}>\n        <div className='save'>\n          <div>\n            <ClockCircleOutlined />\n            <span>{message}</span>\n          </div>\n          <div className='save_right'>\n            {\n              showBack && <Button onClick={onBack || goBack} type=\"primary\" ghost icon={<RollbackOutlined />} disabled={role_type} className=\"save_right_btn\">返回</Button>\n            }\n            {\n              onBack && <Button onClick={onBack} type=\"primary\" ghost icon={<ArrowLeftOutlined />} disabled={role_type} className=\"save_right_btn\">返回</Button>\n            }\n            {/* 当存在该方法时显示刷新操作并执行 */}\n            {\n              onRefresh && <Button onClick={onRefresh} type=\"primary\" ghost icon={<RedoOutlined />} disabled={role_type} className=\"save_right_btn\">刷新</Button>\n            }\n\n            {\n              onSave && <Button onClick={onSave} icon={<SaveOutlined />} disabled={role_type} className=\"save_right_btn\">保存</Button>\n            }\n            {\n              onDraft && <Button onClick={onDraft} icon={<SaveOutlined />} disabled={role_type} className=\"save_right_btn\">保存草稿</Button>\n            }\n            {\n              onPublish && <Button onClick={onPublish} icon={<SaveOutlined />} disabled={role_type} className=\"save_right_btn\">发布文章</Button>\n            }\n\n\n          </div>\n        </div>\n\n      </Card>\n    </div >\n  )\n}\nconst mapStateToProps = (state: any) => {\n  return {\n    isCollapsed: state.SideMenuStateReducer.isCollapsed\n  }\n}\nexport default connect(mapStateToProps, null)(withRouter(Save));\n","import React, { useEffect, useState } from 'react';\nimport { Button, Form, Input, Modal } from 'antd';\n\nconst InputImage = (props: any) => {\n  // form\n  const [form] = Form.useForm();\n  // 窗口显示隐藏\n  const [visible, setVisible] = useState(false);\n  useEffect(() => {\n    if (props.fileList.length > 0) {\n      form.setFieldsValue({\n        url: props.fileList[0].thumbUrl ? props.fileList[0].thumbUrl : '',\n      });\n    }\n  }, [form, props.fileList, props.imgUrl]);\n  // 点击确定\n  const onOk = () => {\n    let val = form.getFieldsValue();\n    props.onChangeVal(val.url);\n    setVisible(false);\n  };\n  const onCancel = () => {\n    setVisible(false);\n  };\n  const onVisible = () => {\n    setVisible(true);\n    if (props.imgUrl.url === '') {\n      form.resetFields();\n    }\n    // 重新赋值\n    if (props.fileList.length > 0) {\n      form.setFieldsValue({\n        url: props.fileList[0].thumbUrl ? props.fileList[0].thumbUrl : '',\n      });\n    }\n  };\n  return (\n    <div>\n      <Button className=\"btn-input\" onClick={onVisible} type=\"primary\">\n        输入链接\n      </Button>\n      <div>\n        <Modal\n          forceRender\n          title={<div style={{ textAlign: 'left' }}>图片链接 </div>}\n          open={visible}\n          onOk={onOk}\n          onCancel={onCancel}\n        >\n          <Form form={form}>\n            <Form.Item\n              label=\"图片链接\"\n              name=\"url\"\n              rules={[{ required: true, message: '请输入图片链接' }]}\n            >\n              <Input placeholder=\"请输入图片链接\" />\n            </Form.Item>\n          </Form>\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default InputImage;\n","import React, { useEffect, useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { message, Modal, Upload } from 'antd';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as BlogActions from '@/redux/actionCreator';\nimport InputImage from './InputImage';\nconst UploadImage: React.FC = (props: any) => {\n  // 预览模态框\n  const [previewOpen, setPreviewOpen] = useState(false);\n  // 预览图片\n  const [previewImage, setPreviewImage] = useState('');\n  // 预览头部\n  const [previewTitle, setPreviewTitle] = useState('');\n  // 图片信息\n  const [fileList, setFileList] = useState<any>([]);\n  // 删除后置空图片链接输入框\n  const [imgUrl, setImgUrl] = useState({});\n  // 图片赋值\n  useEffect(() => {\n    setFileList(props.imgUrlArr !== undefined ? props.imgUrlArr : []);\n  }, [props.imgUrlArr]);\n  // 上传之前的操作\n  const beforeUpload = (file: any) => {\n    // 上传图片格式\n    const isJpgOrPng =\n      file.type === 'image/jpeg' ||\n      file.type === 'image/png' ||\n      file.type === 'image/webp' ||\n      file.type === 'image/jpg' ||\n      file.type === 'image/gif';\n    if (!isJpgOrPng) {\n      message.error('只允许上传 JPG/PNG/WEBP/JPG/GIT 文件!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('图片大小必须小于 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n  };\n  // 上传操作\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n  // 上传图片\n  const handleUpload = (data: any) => {\n    props.BlogActions.asyncFileUploadAction(data).then((result: any) => {\n      message.success('上传成功');\n      if (result) {\n        props.handleChange(result);\n        setFileList([\n          {\n            name: result.name,\n            thumbUrl: result.url,\n          },\n        ]);\n      }\n    });\n  };\n\n  // 预览\n  const handlePreview = (file: any) => {\n    setPreviewImage(file.thumbUrl);\n    setPreviewTitle(file.name);\n    setPreviewOpen(true);\n  };\n  // 关闭预览\n  const handleCancel = () => setPreviewOpen(false);\n  // 删除图片\n  const hanleRemove = (it: any) => {\n    props.handleRemove(it)\n    setFileList([]);\n    setImgUrl({\n      url: '',\n    });\n  };\n  // 赋值上传图片\n  const onChangeVal = (data: any) => {\n    props.handleChange(data);\n    // 截取\n    let start = data.indexOf('images');\n    let end = data.indexOf('?', start);\n    let name = data.substring(start, end);\n    setFileList([\n      {\n        name: name,\n        thumbUrl: data,\n      },\n    ]);\n  };\n  return (\n    <>\n      <Upload\n        listType=\"picture-card\"\n        fileList={fileList}\n        customRequest={handleUpload}\n        onPreview={handlePreview}\n        beforeUpload={beforeUpload}\n        // onChange={handleChange}\n        onRemove={hanleRemove}\n      >\n        {fileList.length >= 1 ? null : uploadButton}\n      </Upload>\n      {/* 预览 */}\n      <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\n        <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n      </Modal>\n      <InputImage\n        onChangeVal={onChangeVal}\n        fileList={fileList ? fileList : [{ name: '', thumbUrl: '' }]}\n        imgUrl={imgUrl}\n      />\n    </>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    BlogActions: bindActionCreators(BlogActions, dispatch),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(UploadImage);\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Form, Input, Row, Col, Switch, Select, notification, message } from 'antd';\nimport Save from '@/components/save';\nimport { connect } from 'react-redux';\nimport { Dispatch, bindActionCreators } from 'redux';\nimport * as BlogActions from '@/redux/actionCreator';\nimport UploadImage from '@/components/upload';\nimport Editor from 'for-editor';\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst formItemLayout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 18,\n  },\n};\nconst formItemLayoutTwo = {\n  labelCol: {\n    span: 0,\n  },\n  wrapperCol: {\n    span: 24,\n  },\n};\ninterface DataType {\n  name: string;\n  _id: string | null | undefined;\n  publishStatus: number;\n  status: number;\n  views: number;\n  comment: number;\n  like: number;\n  categories: string;\n  content: string;\n  cover: string;\n  introduction: string;\n  isComment: boolean;\n  isLike: boolean;\n  isTop: boolean;\n  tags: string[];\n  title: string;\n}\ninterface ArticleData {\n  url(name: string, url: string): unknown;\n  totalCount: number;\n  page: number;\n  pageSize: number;\n  data: DataType[];\n}\ninterface ResData {\n  code: number;\n  data: string[];\n  msg: string;\n  res: DataType[]\n}\nconst ArticleAdd = (props: any) => {\n  const [form] = Form.useForm();\n  // 标签信息\n  const [tagsList, setTagsList] = useState<DataType[]>([]);\n  // 分类信息\n  const [categoryList, setCategoryList] = useState<DataType[]>([]);\n  // 当前第几页\n  const [currentPage] = useState(0);\n  // 每页显示条数\n  const [pageSize] = useState(0);\n  // 上次保存时间\n  const [updateTime] = useState();\n  // 定义ref\n  const editorRef = useRef<any>();\n  // 评论状态\n  const [isComment, setIsComment] = useState(true);\n  // 点赞状态\n  const [isLike, setIsLike] = useState(true);\n  // 置顶状态\n  const [isTop, setIsTop] = useState(false);\n  // 图片列表\n  const [imageList, setImageList] = useState<any>();\n  // 获取分类列表\n  useEffect(() => {\n    props.BlogActions.asyncCategoriesAction(currentPage, pageSize, '').then((res: ArticleData) => {\n      let { data } = res.data as unknown as ArticleData;\n      setCategoryList(data);\n    });\n  }, [currentPage, pageSize, props.BlogActions]);\n  // 获取标签列表\n  useEffect(() => {\n    props.BlogActions.asyncTagsAction(currentPage, pageSize, '').then((res: ArticleData) => {\n      let { data } = res.data as unknown as ArticleData;\n      setTagsList(data);\n    });\n  }, [currentPage, pageSize, props.BlogActions]);\n  // 添加图片\n  const addImg = (file: any) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    // 上传图片接口\n    props.BlogActions.asyncFileUploadAction(formData).then((res: ArticleData) => {\n      if (res) {\n        // 如果返回值\n        editorRef.current.$img2Url(file.name, res.url);\n      }\n    });\n  };\n  // 保存到草稿\n  const onDraft = async () => {\n    await form.validateFields();\n    let formData = await form.getFieldsValue();\n    // 获取表单值\n    if (typeof imageList === 'object') {\n      formData.cover = imageList.url;\n    }\n    formData.cover = imageList;\n\n    props.BlogActions.asyncArticleAddAction({\n      ...formData,\n      publishStatus: 2,\n      status: 1,\n      views: 0,\n      comment: 0,\n      like: 0,\n      isComment: isComment,\n      isLike: isLike,\n      isTop: isTop,\n    }).then(() => {\n      notification.info({\n        message: '新增成功-保存到草稿',\n        description: `跳转到文章列表`,\n      });\n      setTimeout(() => {\n        props.history.push('/admin/article/list');\n      }, 500);\n    });\n  };\n  // 发布\n  const onPublish = async () => {\n    await form.validateFields();\n    let formData = form.getFieldsValue();\n    // 获取表单值\n    if (typeof imageList === 'object') {\n      formData.cover = imageList.url;\n    } else {\n      formData.cover = imageList;\n    }\n    props.BlogActions.asyncArticleAddAction({\n      ...formData,\n      publishStatus: 1,\n      status: 1,\n      views: 0,\n      comment: 0,\n      like: 0,\n      isComment: isComment,\n      isLike: isLike,\n      isTop: isTop,\n    }).then((res: ResData) => {\n      if (res.msg === \"该文章已存在\") {\n        message.warning(\"文章已存在，请查看后再次提交！\")\n        return false;\n      } else {\n        notification.info({\n          message: '新增成功-发布到线上',\n          description: `即将跳转到文章列表`,\n        });\n        setTimeout(() => {\n          props.history.push('/admin/article/list');\n        }, 500);\n      }\n    });\n  };\n  // 评论开启关闭\n  const onCommentChange = (record: boolean) => {\n    setIsComment(record);\n  };\n  // 点赞开启关闭\n  const onLikeChange = (record: boolean) => {\n    setIsLike(record);\n  };\n  // 置顶开启关闭\n  const onTopChange = (record: boolean) => {\n    setIsTop(record);\n  };\n  // 获取图片信息\n  const handleChange = (data: string[]) => {\n    setImageList(data);\n  };\n  // 获取移除的图片信息\n  const handleRemove = () => {\n    setImageList('');\n  };\n  return (\n    <>\n      <Save time={updateTime} onDraft={onDraft} onPublish={onPublish} />\n      <div className=\"about\">\n        新增文章\n        <Form form={form}>\n          <Row>\n            <Col span={12}>\n              <Form.Item\n                name=\"title\"\n                {...formItemLayout}\n                label=\"文章标题\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请输入文章标题',\n                  },\n                ]}\n              >\n                <Input placeholder=\"请输入文章标题\" />\n              </Form.Item>\n              <Form.Item\n                label=\"分类\"\n                name=\"categories\"\n                {...formItemLayout}\n                rules={[{ required: true, message: '分类不能为空' }]}\n              >\n                <Select\n                  showSearch\n                  style={{ width: '100%' }}\n                  placeholder=\"请选择分类信息\"\n                  optionFilterProp=\"children\"\n                >\n                  {categoryList.map((item) => (\n                    <Option value={item.name} key={item._id}>\n                      {item.name}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n              <Form.Item\n                label=\"标签\"\n                name=\"tags\"\n                {...formItemLayout}\n                rules={[{ required: true, message: '标签不能为空' }]}\n              >\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: '100%' }}\n                  placeholder=\"请选择对应的标签\"\n                  optionLabelProp=\"label\"\n                >\n                  {tagsList.map((item) => (\n                    <Option value={item.name} key={item._id} label={item.name}>\n                      {item.name}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n              <Form.Item\n                name=\"introduction\"\n                {...formItemLayout}\n                label=\"文章简介\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请输入文章简介',\n                  },\n                ]}\n              >\n                <TextArea showCount rows={6} maxLength={500} />\n              </Form.Item>\n            </Col>\n            <Col span={10}>\n              <Form.Item name=\"cover\" {...formItemLayout} label=\"文章封面\">\n                {/* @ts-ignore */}\n                <UploadImage handleChange={handleChange} handleRemove={handleRemove} />\n              </Form.Item>\n              <Form.Item name=\"isComment\" {...formItemLayout} label=\"评论\">\n                <Switch checked={isComment} onChange={onCommentChange} />\n              </Form.Item>\n              <Form.Item name=\"isLike\" {...formItemLayout} label=\"点赞\">\n                <Switch checked={isLike} onChange={onLikeChange} />\n              </Form.Item>\n              <Form.Item name=\"isTop\" {...formItemLayout} label=\"置顶\">\n                <Switch checked={isTop} onChange={onTopChange} />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={24}>\n              <Form.Item name=\"content\" {...formItemLayoutTwo} style={{ width: '100%' }}>\n                {/* <MarkDown handleChangeVal={handleChangeVal} /> */}\n                <Editor\n                  preview={false}\n                  subfield={false}\n                  placeholder=\"请撰写文章\"\n                  ref={editorRef}\n                  addImg={file => addImg(file)}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    BlogActions: bindActionCreators(BlogActions, dispatch),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ArticleAdd);\n"],"names":["connect","state","isCollapsed","SideMenuStateReducer","withRouter","props","role_type","jwtDecode","localStorage","getItem","role","time","showBack","onRefresh","onSave","onBack","onDraft","onPublish","message","dayjs","format","width","className","bordered","style","ClockCircleOutlined","onClick","history","goBack","type","ghost","icon","RollbackOutlined","disabled","ArrowLeftOutlined","RedoOutlined","SaveOutlined","Form","form","useState","visible","setVisible","useEffect","fileList","length","setFieldsValue","url","thumbUrl","imgUrl","resetFields","forceRender","title","textAlign","open","onOk","val","getFieldsValue","onChangeVal","onCancel","label","name","rules","required","placeholder","dispatch","BlogActions","bindActionCreators","previewOpen","setPreviewOpen","previewImage","setPreviewImage","previewTitle","setPreviewTitle","setFileList","setImgUrl","undefined","imgUrlArr","uploadButton","PlusOutlined","marginTop","listType","customRequest","data","asyncFileUploadAction","then","result","handleChange","onPreview","file","beforeUpload","isJpgOrPng","isLt2M","size","onRemove","it","handleRemove","footer","alt","src","start","indexOf","end","substring","TextArea","Input","Option","Select","formItemLayout","labelCol","span","wrapperCol","formItemLayoutTwo","tagsList","setTagsList","categoryList","setCategoryList","currentPage","pageSize","updateTime","editorRef","useRef","isComment","setIsComment","isLike","setIsLike","isTop","setIsTop","imageList","setImageList","asyncCategoriesAction","res","asyncTagsAction","validateFields","formData","cover","asyncArticleAddAction","publishStatus","status","views","comment","like","notification","description","setTimeout","push","msg","showSearch","optionFilterProp","map","item","value","_id","mode","optionLabelProp","showCount","rows","maxLength","checked","onChange","record","preview","subfield","ref","addImg","FormData","append","current","$img2Url"],"sourceRoot":""}