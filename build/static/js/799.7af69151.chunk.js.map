{"version":3,"file":"static/js/799.7af69151.chunk.js","mappings":"iSAOAA,EAAAA,EAAY,CACVC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,IAGF,IAmEA,GAAeC,EAAAA,EAAAA,KAnEI,SAACC,GAClB,OAAwBC,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAG,eAA/BC,EAAI,KAAEC,EAAO,KA+DpB,OA7DAC,EAAAA,EAAAA,YAAU,WAUR,IATA,IACIC,EADWL,EAAMM,KACEC,KAAI,SAACC,GAC1B,MAAO,CACLC,WAAYD,EAAKC,WACjBC,IAAKF,EAAKE,IAEd,IAEIC,EAAW,CAAC,EACPC,EAAI,EAAGA,EAAIP,EAAQQ,OAAQD,IAAK,CACvC,IAAIJ,EAAOH,EAAQO,GAAGH,WACtBE,EAAIH,GAAQG,EAAIH,GAAQ,GAAK,CAC/B,CAGA,IAAIM,EAAgB,GAChBC,EAAMC,OAAOC,KAAKN,GAClBO,EAASF,OAAOE,OAAOP,GACvBC,EAAI,EACJO,EAASJ,EAAIR,KAAI,SAACC,EAAMY,GAC1B,MAAO,CACLC,MAAOH,EAAOE,GACdE,KAAMd,EACNe,GAAIX,IAER,IAGIY,GAFJV,EAAgBK,GAEkBZ,KAAI,SAACC,GAAS,OAAKA,EAAKa,KAAK,IAE3DI,EAAcD,EAAcE,QAAO,SAACC,EAAMC,GAAI,OAAKD,EAAOC,CAAI,GADvD,GAEXd,EAAcP,KAAI,SAACC,GAAS,OAAMA,EAAKa,MAASb,EAAKa,MAAQI,EAAe,GAAG,IAC/EtB,EAAQW,EACV,GAAG,CAACd,EAAMM,QACVF,EAAAA,EAAAA,YAAU,WACR,IAAMyB,EAAUrC,EAAAA,GAAasC,SAASC,eAAe,SAC/CC,EAAS,CACbC,MAAO,CACLC,KAAM,2BACNC,QAAS,YACTC,KAAM,UAERC,OAAQ,CACN,CACEC,KAAM,MACNC,OAAQ,MACRjC,MAAK,OAAKJ,GACVsC,SAAU,CACRC,UAAW,CACTC,WAAY,GACZC,cAAe,EACfC,YAAa,0BAMvBf,EAAQgB,UAAUb,EACpB,GAAG,CAAC9B,KAEG,gBAAKqB,GAAG,OAAOuB,MAAO,CAAEC,MAAO,OAAQC,OAAQ,UACxD,I,8BCrDA,GAAeC,EAAAA,EAAAA,IAAQ,MALI,SAACC,GAC1B,MAAO,CACLC,aAAaC,EAAAA,EAAAA,IAAmBD,EAAaD,GAEjD,GACA,EAvBa,SAAClD,GAEZ,OAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KASpB,OAPAC,EAAAA,EAAAA,YAAU,WACRJ,EAAMmD,YAAYE,0BAA0B,EAAG,GAAGC,MAAK,SAACC,GAEtD,IAAMjD,EAASiD,EAAIjD,KAAbA,KACNH,EAAQG,EACV,GACF,GAAG,CAACN,EAAMmD,eAER,0BACE,SAAC,EAAU,CAAC7C,KAAMJ,KAGxB,G","sources":["components/echarts/Categories.tsx","pages/home/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport * as echarts from 'echarts/core';\nimport { TitleComponent, TooltipComponent, LegendComponent } from 'echarts/components';\nimport { PieChart } from 'echarts/charts';\nimport { LabelLayout } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { withRouter } from 'react-router-dom';\necharts.use([\n  TitleComponent,\n  TooltipComponent,\n  LegendComponent,\n  PieChart,\n  CanvasRenderer,\n  LabelLayout,\n]);\n\nconst Categories = (props: any) => {\n  const [list, setList] = useState([{}]);\n  // 接口数据\n  useEffect(() => {\n    let articles = props.data;\n    let newList = articles.map((item: any) => {\n      return {\n        categories: item.categories,\n        _id: item._id,\n      };\n    });\n    // 分类的数量汇总\n    let obj: any = {};\n    for (let i = 0; i < newList.length; i++) {\n      let item = newList[i].categories;\n      obj[item] = obj[item] + 1 || 1;\n    }\n\n    // 将对象封装成数组对象格式\n    let newCategories = [];\n    let key = Object.keys(obj); // 取出当前对象的索引\n    let values = Object.values(obj); // 取出当前对象的值\n    let i = 1;\n    let arrObj = key.map((item, index) => {\n      return {\n        value: values[index], // values是一个数组，加index是为了拿到跟索引同个位置的值\n        name: item,\n        id: i++,\n      };\n    });\n    newCategories = arrObj;\n    // 汇总数量\n    let countCategory = newCategories.map((item: any) => item.value);\n    let init = 0;\n    let reduceCount = countCategory.reduce((prev, curr) => prev + curr, init);\n    newCategories.map((item: any) => (item.value = (item.value / reduceCount) * 100));\n    setList(newCategories);\n  }, [props.data]);\n  useEffect(() => {\n    const myChart = echarts.init(document.getElementById('main') as HTMLElement);\n    const option = {\n      title: {\n        text: '文章分布',\n        subtext: 'Fake Data',\n        left: 'center',\n      },\n      series: [\n        {\n          type: 'pie',\n          radius: '50%',\n          data: [...list],\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)',\n            },\n          },\n        },\n      ],\n    };\n    myChart.setOption(option);\n  }, [list]);\n\n  return <div id=\"main\" style={{ width: '100%', height: '500px' }}></div>;\n};\n\nexport default withRouter(Categories);\n","import React, { useEffect, useState } from 'react';\nimport Categories from '@/components/echarts/Categories';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as BlogActions from '@/redux/actionCreator';\nconst Home = (props: any) => {\n  // 文章列表\n  const [list, setList] = useState([]);\n  // 获取文章列表数据\n  useEffect(() => {\n    props.BlogActions.asyncArticleListAllAction(1, 1).then((res: any) => {\n      // 获取文章\n      let { data } = res.data;\n      setList(data);\n    });\n  }, [props.BlogActions]);\n  return (\n    <div>\n      <Categories data={list} />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    BlogActions: bindActionCreators(BlogActions, dispatch),\n  };\n};\nexport default connect(null, mapDispatchToProps)(Home);\n"],"names":["echarts","TitleComponent","TooltipComponent","LegendComponent","PieChart","CanvasRenderer","LabelLayout","withRouter","props","useState","list","setList","useEffect","newList","data","map","item","categories","_id","obj","i","length","newCategories","key","Object","keys","values","arrObj","index","value","name","id","countCategory","reduceCount","reduce","prev","curr","myChart","document","getElementById","option","title","text","subtext","left","series","type","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","setOption","style","width","height","connect","dispatch","BlogActions","bindActionCreators","asyncArticleListAllAction","then","res"],"sourceRoot":""}