{"version":3,"file":"static/js/47.b8ff7057.chunk.js","mappings":"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","sources":["components/pagination/index.tsx","pages/navigation_category/index.tsx","utils/prompt.ts"],"sourcesContent":["import { ConfigProvider, Pagination } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport zhCN from 'antd/es/locale/zh_CN';\nconst MyPagination = (props: any) => {\n  // 分页总数\n  const [total, setTotal] = useState(0)\n  // 当前第几页\n  const [currentPage, setCurrentPage] = useState(0)\n  // 每页显示条数\n  const [pageSize, setPageSize] = useState(0)\n  useEffect(() => {\n    setTotal(props.total)\n    setCurrentPage(props.currentPage)\n    setPageSize(props.pageSize)\n  }, [props])\n\n  const onChangePage = (page: number, pageSize: number) => {\n    // 将切换的页码参数传递过去\n    props.onChange(page, pageSize)\n  }\n  return (\n    <div>\n      {/* 中文语言包 */}\n      < ConfigProvider locale={zhCN} >\n        <Pagination\n          style={{ textAlign: 'center', paddingTop: '10px', borderTop: '2px solid #fafafa' }}\n          current={currentPage} // 当前页\n          pageSize={pageSize} // 每页条数\n          total={total} // 数据总数\n          pageSizeOptions={[5, 15, 50, 100]} // 每页显示多少条\n          onChange={onChangePage} // 监听pageSize回调\n          showSizeChanger // 展示 pageSize 切换器\n          showQuickJumper // 快速跳转至某页\n          showTotal={total => `共有 ${total} 条数据`} // 展示页码\n        />\n      </ConfigProvider >\n    </div>\n  )\n}\nexport default MyPagination\n","import React, { useEffect, useState } from 'react';\nimport { Button, Form, Input, InputNumber, message, Modal, Table } from 'antd';\nimport type { ColumnsType } from 'antd/es/table';\nimport { DeleteOutlined, ExclamationCircleOutlined, EditOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { Dispatch, bindActionCreators } from 'redux';\nimport * as BlogActions from '@/redux/actionCreator';\nimport MyPagination from '@/components/pagination';\nimport dayjs from 'dayjs';\nimport jwtDecode from 'jwt-decode';\nimport { handleNotAdd, handleNotDelete, handleNotUpdate } from '@/utils/prompt';\nconst { confirm } = Modal;\nconst { Search } = Input;\ninterface DataType {\n  key?: React.Key;\n  _id: string;\n  name: string;\n  createTime: string;\n  updateTime: string;\n}\ninterface CategoryData {\n  index: any;\n  name: any;\n  data: {\n    data: DataType[];\n    totalCount: number;\n    page: number;\n    pageSize: number;\n  };\n}\nconst NavigationCategory = (props: any) => {\n  const token = jwtDecode(localStorage.getItem('token') as string) as object | any;\n  const role_type = token[0].role[0].role_type\n\n  const columns: ColumnsType<DataType> = [\n    {\n      title: '分类名称',\n      dataIndex: 'name',\n      width: '20rem',\n    },\n    {\n      title: '分类索引',\n      dataIndex: 'index',\n      key: 'index',\n      width: '20rem',\n    },\n    {\n      title: '网站数量',\n      dataIndex: 'navigationNum',\n      key: 'navigationNum',\n      width: '20rem',\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'createTime',\n      key: 'createTime',\n      render: time => {\n        return time && dayjs(time * 1000).format('YYYY-MM-DD HH:mm:ss');\n      },\n    },\n    {\n      title: '更新时间',\n      dataIndex: 'updateTime',\n      key: 'updateTime',\n      render: time => {\n        return time && dayjs(time * 1000).format('YYYY-MM-DD HH:mm:ss');\n      },\n    },\n    {\n      title: '操作',\n      key: 'action',\n      className: 'handle_btn',\n      render: item => {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              danger\n              shape=\"circle\"\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                categoryDelete(item);\n              }}\n              style={{ marginRight: '5px' }}\n            />\n            <Button\n              type=\"primary\"\n              ghost\n              shape=\"circle\"\n              icon={<EditOutlined />}\n              onClick={() => {\n                categoryUpdate(item);\n              }}\n              style={{ marginRight: '5px' }}\n            />\n          </div>\n        );\n      },\n    },\n  ];\n  // 表单数据\n  const [form] = Form.useForm();\n  // 更新表单\n  const [updateForm] = Form.useForm();\n  // 分类列表\n  const [list, setList] = useState<DataType[]>([]);\n  // 分页总数\n  const [total, setTotal] = useState(0);\n  // 当前第几页\n  const [currentPage, setCurrentPage] = useState(1);\n  // 每页显示条数\n  const [pageSize, setPageSize] = useState(15);\n  // 窗口\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  // 更新窗口\n  const [isModalUpdateOpen, setIsModalUpdateOpen] = useState(false);\n  // 更新的数据\n  const [editItems, setEditItems] = useState<any>([])\n  // 获取分类列表数据\n  useEffect(() => {\n    props.BlogActions.asyncNavigationCategoriesAction(currentPage, pageSize, '').then((res: CategoryData) => {\n      // 获取分类\n      let { data, totalCount, page, pageSize } = res.data;\n      setList(data);\n      setTotal(totalCount);\n      setCurrentPage(page);\n      setPageSize(pageSize);\n    });\n  }, [currentPage, pageSize, props.BlogActions]);\n\n  // 新增分类\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  // 点击确定按钮\n  const handleConfirm = async () => {\n    if (role_type) {\n      return handleNotAdd()\n    }\n    // 校验form值 校验通过后获取值\n    await form.validateFields();\n    // 获取表单值\n    const data = form.getFieldsValue();\n    props.BlogActions.asyncNavigationCategoryAddAction({\n      name: data.title,\n      index: data.index,\n    }).then(() => {\n      message.success('分类新增成功');\n      form.resetFields();\n      setIsModalOpen(false);\n      // 重新调用查询接口\n      props.BlogActions.asyncNavigationCategoriesAction(currentPage, pageSize, '').then((res: CategoryData) => {\n        let { data } = res.data;\n        setList(data);\n      });\n    });\n  };\n  // 点击更新\n  const categoryUpdate = (item: CategoryData) => {\n    updateForm.setFieldsValue({ name: item.name, index: item.index });\n    setIsModalUpdateOpen(true);\n    setEditItems(item)\n  };\n  // 更新操作\n  const handleUpdateConfirm = () => {\n    if (role_type) {\n      return handleNotUpdate();\n    }\n    let value = updateForm.getFieldsValue();\n    // 执行更新\n    props.BlogActions.asyncNavigationCategoryUpdateAction({\n      name: value.name,\n      index: value.index,\n      id: editItems._id,\n    }).then(() => {\n      message.success(\"导航分类更新成功\")\n      // 刷新列表数据\n      props.BlogActions.asyncNavigationCategoriesAction(currentPage, pageSize, '').then((res: CategoryData) => {\n        // 获取分类\n        let { data, totalCount, page, pageSize } = res.data;\n        setList(data);\n        setTotal(totalCount);\n        setCurrentPage(page);\n        setPageSize(pageSize);\n      });\n    });\n    updateForm.resetFields();\n    setIsModalUpdateOpen(false);\n  };\n  // 关闭窗口\n  const handleCancel = () => {\n    form.resetFields();\n    setIsModalOpen(false);\n  };\n  // 关闭窗口\n  const handleUpdateCancel = () => {\n    updateForm.resetFields();\n    setIsModalUpdateOpen(false);\n  };\n  // 删除分类\n  const categoryDelete = (item: { _id: string; }) => {\n    confirm({\n      title: '你确定要删除吗?',\n      icon: <ExclamationCircleOutlined />,\n      onOk() {\n        if (role_type) {\n          return handleNotDelete();\n        }\n        props.BlogActions.asyncNavigationCategoryDeleteAction(item._id).then((res: { code: number; } | undefined) => {\n          if (res === undefined) {\n            message.error('分类删除失败,请稍后再试');\n            return false;\n          }\n          if (res.code === 40001) {\n            message.error('导航中有关联该分类信息，请解绑后再次执行删除操作');\n            return false;\n          }\n\n          // 先将要删除的数据过滤掉再调用接口\n          setList(list.filter((it: { _id: string | undefined }) => it._id !== item._id));\n          message.success('分类删除成功');\n          props.BlogActions.asyncNavigationCategoriesAction(currentPage, pageSize, '').then((res: CategoryData) => {\n            // 获取分类\n            let { data, totalCount, page, pageSize } = res.data;\n            setList(data);\n            setTotal(totalCount);\n            setCurrentPage(page);\n            setPageSize(pageSize);\n          });\n        });\n      },\n    });\n  };\n  // 搜索\n  const onSearch = (value: string) => {\n    props.BlogActions.asyncNavigationCategoriesAction(currentPage, pageSize, value).then((res: CategoryData) => {\n      let { data, totalCount, page, pageSize } = res.data;\n      setList(data);\n      setTotal(totalCount);\n      setCurrentPage(page);\n      setPageSize(pageSize);\n    });\n  };\n  // 跳转页数据显示\n  const onChangePage = (page: number, pageSize: number, params = '') => {\n    // 重新调用接口将参数传递过去\n    props.BlogActions.asyncNavigationCategoriesAction(page, pageSize, params).then((res: CategoryData) => {\n      // 获取列表数据\n      let { data } = res.data;\n      setList(data);\n      // 切换行\n      setCurrentPage(page);\n      // 根据页面数据显示页码\n      setPageSize(pageSize);\n    });\n  };\n  return (\n    <div>\n      <div className=\"title\">\n        <Button type=\"primary\" onClick={showModal} className=\"btn\">\n          添加分类\n        </Button>\n        <Search\n          className=\"search\"\n          allowClear\n          placeholder=\"请输入分类名称\"\n          onSearch={onSearch}\n          enterButton\n        />\n      </div>\n      <Modal\n        open={isModalOpen}\n        title={<div style={{ textAlign: 'left' }}>添加分类</div>}\n        okText=\"新增\"\n        cancelText=\"取消\"\n        onCancel={handleCancel}\n        onOk={() => {\n          handleConfirm();\n        }}\n      >\n        <Form form={form} layout=\"vertical\" name=\"basic\" className=\"userAddFrom\">\n          <Form.Item\n            name=\"title\"\n            label=\"名称\"\n            rules={[{ required: true, message: '分类名称不能为空' }]}\n          >\n            <Input placeholder=\"请输入分类名称\" />\n          </Form.Item>\n          <Form.Item\n            name=\"index\"\n            label=\"分类索引\"\n            rules={[{ required: true, message: '分类索引不能为空' }]}\n          >\n            <InputNumber min={1} max={500} />\n          </Form.Item>\n        </Form>\n      </Modal>\n      {/* 更新操作 */}\n      <Modal\n        open={isModalUpdateOpen}\n        title={<div style={{ textAlign: 'left' }}>更新书籍</div>}\n        okText=\"更新\"\n        cancelText=\"取消\"\n        onCancel={handleUpdateCancel}\n        onOk={() => {\n          handleUpdateConfirm();\n        }}\n      >\n        <Form form={updateForm} layout=\"vertical\" name=\"basic\" className=\"userAddFrom\">\n          <Form.Item\n            name=\"name\"\n            label=\"名称\"\n            rules={[{ required: true, message: '分类名称不能为空' }]}\n          >\n            <Input placeholder=\"请输入分类名称\" />\n          </Form.Item>\n          <Form.Item\n            name=\"index\"\n            label=\"分类索引\"\n            rules={[{ required: true, message: '分类索引不能为空' }]}\n          >\n            <InputNumber min={1} max={500} />\n          </Form.Item>\n        </Form>\n      </Modal>\n      <Table\n        columns={columns}\n        dataSource={list}\n        scroll={{ y: 'calc(100vh - 240px)', x: true }}\n        rowKey={(item) => {\n          return item._id + Date.now();\n        }}\n        pagination={false}\n      />\n      <MyPagination\n        pageSize={pageSize}\n        currentPage={currentPage}\n        total={total}\n        onChange={onChangePage}\n      ></MyPagination>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    BlogActions: bindActionCreators(BlogActions, dispatch),\n  };\n};\nexport default connect(null, mapDispatchToProps)(NavigationCategory);\n","import { message } from 'antd';\n\n// 禁止操作项\nexport const handleNotDelete = () => {\n  return message.warning('访客暂不支持删除操作😅');\n};\nexport const handleNotUpdate = () => {\n  return message.warning('访客暂不支持更新操作😅');\n};\nexport const handleNotAdd = () => {\n  return message.warning('访客暂不支持添加操作😅');\n};\nexport const handleNotAudit = () => {\n  return message.warning('访客暂不支持审批操作😅');\n};\nexport const handleNotAllAudit = () => {\n  return message.warning('访客暂不支持一键审批操作😅');\n};\nexport const onNotChangePublishStatus = () => {\n  return message.warning('访客暂不支持下线文章操作😅');\n};\nexport const onNotChangePublishLineStatus = () => {\n  return message.warning('访客暂不支持上线文章操作😅');\n};\nexport const onNotChangeStatus = () => {\n  return message.warning('访客暂不支持置顶操作😅');\n};\nexport const handleNotChangeStatus = () => {\n  return message.warning('访客暂不支持状态变更操作😅');\n};\nexport const handleNotSave = () => {\n  return message.warning('访客暂不支持发布操作😅');\n};\nexport const handleNotSaveArticle = () => {\n  return message.warning('访客暂不支持发布文章操作😅');\n};\nexport const handleNotSaveDraft = () => {\n  return message.warning('访客暂不支持保存草稿操作😅');\n};\nexport const handleNotUpload = () => {\n  return message.warning('访客暂不支持上传图片操作😅');\n};\nexport const handleNotLike = () => {\n  return message.warning('访客暂不支持输入图片链接操作😅');\n};\n"],"names":["props","useState","total","setTotal","currentPage","setCurrentPage","pageSize","setPageSize","useEffect","locale","zhCN","style","textAlign","paddingTop","borderTop","current","pageSizeOptions","onChange","page","showSizeChanger","showQuickJumper","showTotal","confirm","Modal","Search","Input","connect","dispatch","BlogActions","bindActionCreators","role_type","jwtDecode","localStorage","getItem","role","columns","title","dataIndex","width","key","render","time","dayjs","format","className","item","type","danger","shape","icon","onClick","categoryDelete","marginRight","ghost","categoryUpdate","Form","form","updateForm","list","setList","isModalOpen","setIsModalOpen","isModalUpdateOpen","setIsModalUpdateOpen","editItems","setEditItems","asyncNavigationCategoriesAction","then","res","data","totalCount","handleConfirm","handleNotAdd","validateFields","getFieldsValue","asyncNavigationCategoryAddAction","name","index","message","resetFields","setFieldsValue","onOk","handleNotDelete","asyncNavigationCategoryDeleteAction","_id","undefined","code","filter","it","allowClear","placeholder","onSearch","value","enterButton","open","okText","cancelText","onCancel","layout","label","rules","required","min","max","handleNotUpdate","asyncNavigationCategoryUpdateAction","id","handleUpdateConfirm","dataSource","scroll","y","x","rowKey","Date","now","pagination","params","handleNotAudit","handleNotAllAudit","onNotChangePublishStatus","onNotChangePublishLineStatus","onNotChangeStatus","handleNotChangeStatus","handleNotSave","handleNotSaveArticle","handleNotSaveDraft","handleNotUpload","handleNotLike"],"sourceRoot":""}