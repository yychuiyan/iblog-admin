{"version":3,"file":"static/js/135.c1999901.chunk.js","mappings":"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","sources":["components/pagination/index.tsx","pages/comment/index.tsx","utils/prompt.ts"],"sourcesContent":["import { ConfigProvider, Pagination } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport zhCN from 'antd/es/locale/zh_CN';\nconst MyPagination = (props: any) => {\n  // 分页总数\n  const [total, setTotal] = useState(0)\n  // 当前第几页\n  const [currentPage, setCurrentPage] = useState(0)\n  // 每页显示条数\n  const [pageSize, setPageSize] = useState(0)\n  useEffect(() => {\n    setTotal(props.total)\n    setCurrentPage(props.currentPage)\n    setPageSize(props.pageSize)\n  }, [props])\n\n  const onChangePage = (page: number, pageSize: number) => {\n    // 将切换的页码参数传递过去\n    props.onChange(page, pageSize)\n  }\n  return (\n    <div>\n      {/* 中文语言包 */}\n      < ConfigProvider locale={zhCN} >\n        <Pagination\n          style={{ marginTop: \"10px\" }}\n          current={currentPage} // 当前页\n          pageSize={pageSize} // 每页条数\n          total={total} // 数据总数\n          pageSizeOptions={[5, 10, 50, 100]} // 每页显示多少条\n          onChange={onChangePage} // 监听pageSize回调\n          showSizeChanger // 展示 pageSize 切换器\n          showQuickJumper // 快速跳转至某页\n          showTotal={total => `共有 ${total} 条数据`} // 展示页码\n        />\n      </ConfigProvider >\n    </div>\n  )\n}\nexport default MyPagination\n","import React, { useEffect, useState } from 'react';\nimport { Button, Input, message, Modal, Table } from 'antd';\nimport type { ColumnsType } from 'antd/es/table';\nimport { DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { Dispatch, bindActionCreators } from 'redux';\nimport * as BlogActions from '@/redux/actionCreator';\nimport MyPagination from '@/components/pagination';\nimport dayjs from 'dayjs';\nimport jwtDecode from 'jwt-decode';\nimport { handleNotUpdate } from '@/utils/prompt';\nimport './index.less';\nconst { confirm } = Modal;\nconst { Search } = Input;\n\ninterface DataType {\n  children: DataType[] | string;\n  key?: React.Key;\n  _id: string;\n  username?: string;\n  avatar?: string;\n  articleIds?: string[];\n  createTime: string;\n  updateTime: string;\n}\ninterface CommentData {\n  totalCount: number;\n  page: number;\n  pageSize: number;\n  data: DataType[];\n}\nconst Comments = (props: any) => {\n  const token = jwtDecode(localStorage.getItem('token') as string) as object | any;\n  const role_type = token[0].role[0].role_type\n  const columns: ColumnsType<DataType> = [\n    {\n      title: '文章标题',\n      dataIndex: 'articleTitle',\n      fixed: 'left',\n      width: 160,\n    },\n    {\n      title: '昵称',\n      dataIndex: 'nickName',\n      width: 100,\n    },\n    {\n      title: '当前回复内容',\n      dataIndex: 'currentReplayContent',\n    },\n    {\n      title: '目标回复ID',\n      dataIndex: 'targetReplayId',\n    },\n    {\n      title: '目标回复内容',\n      dataIndex: 'targetReplayContent',\n    },\n\n    {\n      title: '评论时间',\n      dataIndex: 'commentTime',\n      render: time => {\n        return dayjs(time * 1000).format('YYYY-MM-DD HH:mm:ss');\n      },\n    },\n    {\n      title: '操作',\n      key: 'action',\n      fixed: 'right',\n      width: 120,\n      render: item => {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              danger\n              shape=\"circle\"\n              // disabled={role_type}\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                role_type ? handleNotUpdate() : commentDelete(item);\n              }}\n              style={{ marginRight: '5px' }}\n            />\n          </div>\n        );\n      },\n    },\n  ];\n\n  // 评论列表\n  const [list, setList] = useState<DataType[]>([]);\n  // 分页总数\n  const [total, setTotal] = useState(0);\n  // 当前第几页\n  const [currentPage, setCurrentPage] = useState(1);\n  // 每页显示条数\n  const [pageSize, setPageSize] = useState(5);\n  // 获取评论列表数据\n  useEffect(() => {\n    props.BlogActions.asyncCommentsAction(currentPage, pageSize, '').then((res: CommentData) => {\n      // 获取评论\n      const { data, totalCount, page, pageSize } = res.data as unknown as CommentData;\n      // 无子节点情况下，按钮\n      data.forEach((item) => {\n        if (item.children.length === 0) {\n          item.children = '';\n        }\n      });\n      setList(data);\n      setTotal(totalCount);\n      setCurrentPage(page);\n      setPageSize(pageSize);\n    });\n  }, [currentPage, pageSize, props.BlogActions]);\n  // 删除评论\n  const commentDelete = (item: DataType) => {\n    confirm({\n      title: '你确定要删除吗?',\n      icon: <ExclamationCircleOutlined />,\n      onOk() {\n        // 先将要删除的数据过滤掉再调用接口\n        setList(list.filter((it: { _id: string }) => it._id !== item._id));\n        message.success('评论删除成功');\n        props.BlogActions.asyncCommentDeleteAction(item._id).then(() => {\n          props.BlogActions.asyncCommentsAction(currentPage, pageSize, '').then((res: CommentData) => {\n            // 获取评论\n            const { data, totalCount, page, pageSize } = res.data as unknown as CommentData;\n            setList(data);\n            setTotal(totalCount);\n            setCurrentPage(page);\n            setPageSize(pageSize);\n          });\n        });\n      },\n    });\n  };\n  // 搜索\n  const onSearch = (articleTitle: string) => {\n    props.BlogActions.asyncCommentsAction(currentPage, pageSize, articleTitle).then((res: CommentData) => {\n      const { data, totalCount, page, pageSize } = res.data as unknown as CommentData;\n      setList(data);\n      setTotal(totalCount);\n      setCurrentPage(page);\n      setPageSize(pageSize);\n    });\n  };\n\n  // 跳转页数据显示\n  const onChangePage = (page: number, pageSize: number, params = '') => {\n    // 重新调用接口将参数传递过去\n    props.BlogActions.asyncCommentsAction(page, pageSize, params).then((res: CommentData) => {\n      // 获取列表数据\n      let { data } = res.data as unknown as CommentData;\n      setList(data);\n      // 切换行\n      setCurrentPage(page);\n      // 根据页面数据显示页码\n      setPageSize(pageSize);\n    });\n  };\n  return (\n    <div>\n      <div className=\"cate_title\">\n        <div></div>\n        <div className=\"cate_search\">\n          <Search\n            className=\"search\"\n            allowClear\n            placeholder=\"请输入文章名称\"\n            onSearch={onSearch}\n            enterButton\n          />\n        </div>\n      </div>\n      <Table\n        columns={columns}\n        dataSource={list}\n        rowKey={(item: DataType) => {\n          return item._id;\n        }}\n        pagination={false}\n      />\n      <MyPagination\n        pageSize={pageSize}\n        currentPage={currentPage}\n        total={total}\n        onChange={onChangePage}\n      ></MyPagination>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    BlogActions: bindActionCreators(BlogActions, dispatch),\n  };\n};\nexport default connect(null, mapDispatchToProps)(Comments);\n","import { message } from 'antd';\n\n// 禁止操作项\nexport const handleNotDelete = () => {\n  return message.warning('访客暂不支持删除操作😅');\n};\nexport const handleNotUpdate = () => {\n  return message.warning('访客暂不支持编辑操作😅');\n};\nexport const handleNotAdd = () => {\n  return message.warning('访客暂不支持添加操作😅');\n};\nexport const handleNotAudit = () => {\n  return message.warning('访客暂不支持审批操作😅');\n};\nexport const handleNotAllAudit = () => {\n  return message.warning('访客暂不支持一键审批操作😅');\n};\nexport const onNotChangePublishStatus = () => {\n  return message.warning('访客暂不支持下线文章操作😅');\n};\nexport const onNotChangeStatus = () => {\n  return message.warning('访客暂不支持置顶操作😅');\n};\nexport const handleNotChangeStatus = () => {\n  return message.warning('访客暂不支持标签状态操作😅');\n};\nexport const handleNotSave = () => {\n  return message.warning('访客暂不支持发布操作😅');\n};\nexport const handleNotSaveArticle = () => {\n  return message.warning('访客暂不支持发布文章操作😅');\n};\nexport const handleNotSaveDraft = () => {\n  return message.warning('访客暂不支持保存草稿操作😅');\n};\n"],"names":["props","useState","total","setTotal","currentPage","setCurrentPage","pageSize","setPageSize","useEffect","locale","zhCN","style","marginTop","current","pageSizeOptions","onChange","page","showSizeChanger","showQuickJumper","showTotal","confirm","Modal","Search","Input","connect","dispatch","BlogActions","bindActionCreators","role_type","jwtDecode","localStorage","getItem","role","columns","title","dataIndex","fixed","width","render","time","dayjs","format","key","item","type","danger","shape","icon","DeleteOutlined","onClick","handleNotUpdate","commentDelete","marginRight","list","setList","asyncCommentsAction","then","res","data","totalCount","forEach","children","length","ExclamationCircleOutlined","onOk","filter","it","_id","message","asyncCommentDeleteAction","className","allowClear","placeholder","onSearch","articleTitle","enterButton","dataSource","rowKey","pagination","params","handleNotDelete","handleNotAdd","handleNotAudit","handleNotAllAudit","onNotChangePublishStatus","onNotChangeStatus","handleNotChangeStatus","handleNotSave","handleNotSaveArticle","handleNotSaveDraft"],"sourceRoot":""}