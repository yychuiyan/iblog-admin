{"version":3,"file":"static/js/94.8f5a4b3f.chunk.js","mappings":"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","sources":["components/pagination/index.tsx","pages/permission/RoleList.tsx"],"sourcesContent":["import { ConfigProvider, Pagination } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport zhCN from 'antd/es/locale/zh_CN';\nconst MyPagination = (props: any) => {\n  // 分页总数\n  const [total, setTotal] = useState(0)\n  // 当前第几页\n  const [currentPage, setCurrentPage] = useState(0)\n  // 每页显示条数\n  const [pageSize, setPageSize] = useState(0)\n  useEffect(() => {\n    setTotal(props.total)\n    setCurrentPage(props.currentPage)\n    setPageSize(props.pageSize)\n  }, [props])\n\n  const onChangePage = (page: number, pageSize: number) => {\n    // 将切换的页码参数传递过去\n    props.onChange(page, pageSize)\n  }\n  return (\n    <div>\n      {/* 中文语言包 */}\n      < ConfigProvider locale={zhCN} >\n        <Pagination\n          style={{ textAlign: 'center', paddingTop: '10px', borderTop: '2px solid #fafafa' }}\n          current={currentPage} // 当前页\n          pageSize={pageSize} // 每页条数\n          total={total} // 数据总数\n          pageSizeOptions={[5, 15, 50, 100]} // 每页显示多少条\n          onChange={onChangePage} // 监听pageSize回调\n          showSizeChanger // 展示 pageSize 切换器\n          showQuickJumper // 快速跳转至某页\n          showTotal={total => `共有 ${total} 条数据`} // 展示页码\n        />\n      </ConfigProvider >\n    </div>\n  )\n}\nexport default MyPagination\n","import { Button, Table, Modal, message, Form, Input, Tree } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\nimport { Dispatch, bindActionCreators } from 'redux';\nimport * as BlogActions from '@/redux/actionCreator';\nimport type { ColumnsType } from 'antd/es/table';\nimport MyPagination from '@/components/pagination';\nimport { DeleteOutlined, EditOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport dayjs from 'dayjs';\nconst { confirm } = Modal;\ninterface DataType {\n  _id: string;\n  role_type: number;\n  role_name: string;\n  rights: string[];\n  create_time: string;\n  update_time: string;\n  rightsId: any;\n  key: React.Key;\n  index: number;\n  label: string;\n  title?: string;\n  pagepermission: number | boolean;\n  grade: number;\n  children?: DataType[] | string;\n}\ninterface RoleData {\n  totalCount: number;\n  page: number;\n  pageSize: number;\n  data: DataType[];\n}\n\ninterface RightsData {\n  pagepermission: boolean;\n  totalCount: number;\n  page: number;\n  pageSize: number;\n  data: DataType[];\n}\nconst RoleList = (props: any) => {\n  const columns: ColumnsType<DataType> = [\n    {\n      title: '角色名称',\n      dataIndex: 'role_name',\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'create_time',\n      render: time => {\n        return dayjs(time * 1000).format('YYYY-MM-DD HH:mm:ss');\n      },\n    },\n    {\n      title: '更新时间',\n      dataIndex: 'update_time',\n      render: time => {\n        return time === 0 ? time : dayjs(time * 1000).format('YYYY-MM-DD HH:mm:ss');\n      },\n    },\n    {\n      title: '操作',\n      key: 'action',\n      render: (item) => {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              danger\n              shape=\"circle\"\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                roleDelete(item);\n              }}\n              style={{ marginRight: '5px' }}\n            />\n            <Button\n              type=\"primary\"\n              ghost\n              shape=\"circle\"\n              icon={<EditOutlined />}\n              disabled={item.pagepermission === 2}\n              onClick={() => {\n                roleUpdate(item);\n                setCurrentRights(item.rights)\n              }}\n              style={{ marginRight: '5px' }}\n            />\n          </div>\n        );\n      },\n    },\n  ];\n  // 初始值\n  const [dataSource, setDataSource] = useState<DataType[]>([])\n  // 权限数据\n  const [rightsData, setRightsData] = useState<any>([])\n  // 分页总数\n  const [total, setTotal] = useState(0);\n  // 当前第几页\n  const [currentPage, setCurrentPage] = useState(1);\n  // 每页显示条数\n  const [pageSize, setPageSize] = useState(15);\n  // 更新窗口\n  const [isModalUpdateOpen, setIsModalUpdateOpen] = useState(false);\n  // 更新表单\n  const [updateForm] = Form.useForm();\n  // 保存当前更新的数据\n  const [updateData, setUpdateData] = useState<any>({});\n  // 当前项的数组数据\n  const [currentRights, setCurrentRights] = useState([])\n  // 获取角色列表\n  useEffect(() => {\n    props.BlogActions.asyncRoleListAction(currentPage, pageSize, '').then((res: RoleData) => {\n      // 获取角色\n      let { data, totalCount, page, pageSize } = res.data as unknown as RoleData;\n      setDataSource(data);\n      setTotal(totalCount);\n      setCurrentPage(page);\n      setPageSize(pageSize);\n    });\n  }, [currentPage, pageSize, props.BlogActions]);\n  // 获取权限列表\n  useEffect(() => {\n    props.BlogActions.asyncRightsListAction('', '', '').then((res: RightsData) => {\n      // 获取权限\n      let { data } = res.data as unknown as RightsData;\n      data.map((item: any, index: number) => item.children.length < 1 ? data[index].children = \"\" : data)\n      let newData = data.map((item: any) => {\n        return {\n          'title': item.label,\n          'key': item.key,\n          'children': item.children ? item.children.map((child: any) => {\n            return {\n              'title': child.label,\n              'key': child.key,\n              'children': []\n            }\n          }) : []\n        }\n      })\n      setRightsData(newData);\n    });\n  }, [currentPage, pageSize, props.BlogActions]);\n  // 分页效果\n  // 跳转页数据显示\n  const onChangePage = (page: number, pageSize: number, params = '') => {\n    // 重新调用接口将参数传递过去\n    props.BlogActions.asyncRightsListAction(page, pageSize, params).then((res: RoleData) => {\n      // 获取列表数据\n      let { data } = res.data as unknown as RoleData;\n      setDataSource(data);\n      // 切换行\n      setCurrentPage(page);\n      // 根据页面数据显示页码\n      setPageSize(pageSize);\n    });\n  };\n  // 点击更新\n  const roleUpdate = (item: RoleData) => {\n    setIsModalUpdateOpen(true);\n    updateForm.setFieldsValue(item);\n    setUpdateData(item);\n  };\n  // 更新操作\n  const handleUpdateConfirm = () => {\n    let value = updateForm.getFieldsValue();\n    setDataSource(dataSource.map((item: any) => {\n      if (item._id === updateData._id) {\n        return {\n          ...item,\n          rights: currentRights\n        }\n      }\n      return item;\n    }))\n    props.BlogActions.asyncRoleUpdateAction({\n      role_name: value.role_name,\n      rights: currentRights,\n      //@ts-ignore\n      id: updateData._id,\n    }).then(() => {\n      message.success('更新成功，再次登录后权限生效');\n      props.BlogActions.asyncRoleListAction(currentPage, pageSize, '').then((res: RoleData) => {\n        // 获取角色\n        let { data, totalCount, page, pageSize } = res.data as unknown as RoleData;\n\n        setDataSource(data);\n        setTotal(totalCount);\n        setCurrentPage(page);\n        setPageSize(pageSize);\n      });\n      setIsModalUpdateOpen(false);\n    });\n\n\n  };\n  // 删除\n  const roleDelete = (item: DataType) => {\n    confirm({\n      title: '你确定要删除吗?',\n      icon: <ExclamationCircleOutlined />,\n      onOk() {\n        // 先将要删除的数据过滤掉再调用接口\n        setDataSource(dataSource.filter((it) => it._id !== item._id));\n        message.success('角色删除成功');\n        props.BlogActions.asyncRoleDeleteAction(item._id).then(() => {\n          props.BlogActions.asyncRoleListAction(currentPage, pageSize, '').then((res: RoleData) => {\n            // 获取角色\n            let { data, totalCount, page, pageSize } = res.data as unknown as RoleData;\n            setDataSource(data);\n            setTotal(totalCount);\n            setCurrentPage(page);\n            setPageSize(pageSize);\n          });\n        });\n      }\n    });\n  }\n  // 关闭窗口\n  const handleUpdateCancel = () => {\n    setIsModalUpdateOpen(false);\n  };\n  // 监听选中\n  const onCheck = (checkKeys: any) => {\n    setCurrentRights(checkKeys.checked)\n  }\n  return (\n    <div>\n      <Modal\n        open={isModalUpdateOpen}\n        title={<div style={{ textAlign: 'left' }}>权限分配</div>}\n        okText=\"更新\"\n        cancelText=\"取消\"\n        onCancel={handleUpdateCancel}\n        onOk={() => {\n          handleUpdateConfirm();\n        }}\n      >\n        <Form form={updateForm} layout=\"vertical\" name=\"basic\" className=\"userAddFrom\">\n          <Form.Item name=\"role_name\" label=\"角色名称\" rules={[{ required: true, message: '角色名称不能为空' }]}>\n            <Input />\n          </Form.Item>\n        </Form>\n        <Tree\n          checkable\n          checkedKeys={currentRights}\n          checkStrictly={true}\n          onCheck={onCheck}\n          treeData={rightsData}\n        />\n      </Modal>\n      <Table\n        columns={columns}\n        expandRowByClick={true}\n        scroll={{ y: 'calc(100vh - 210px)', x: true }}\n        dataSource={dataSource}\n        rowKey={(item) => {\n          return item._id;\n        }}\n        pagination={false}\n      />\n      <MyPagination\n        pageSize={pageSize}\n        currentPage={currentPage}\n        total={total}\n        onChange={onChangePage}\n      ></MyPagination>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    BlogActions: bindActionCreators(BlogActions, dispatch),\n  };\n};\nexport default connect(null, mapDispatchToProps)(RoleList);\n"],"names":["props","total","setTotal","useState","currentPage","setCurrentPage","pageSize","setPageSize","useEffect","locale","zhCN","style","textAlign","paddingTop","borderTop","current","pageSizeOptions","onChange","page","showSizeChanger","showQuickJumper","showTotal","confirm","Modal","connect","dispatch","BlogActions","bindActionCreators","columns","title","dataIndex","render","time","dayjs","format","key","item","type","danger","shape","icon","onClick","roleDelete","marginRight","ghost","disabled","pagepermission","roleUpdate","setCurrentRights","rights","dataSource","setDataSource","rightsData","setRightsData","isModalUpdateOpen","setIsModalUpdateOpen","updateForm","Form","updateData","setUpdateData","currentRights","asyncRoleListAction","then","res","data","totalCount","asyncRightsListAction","map","index","children","length","newData","label","child","setFieldsValue","onOk","filter","it","_id","message","asyncRoleDeleteAction","open","okText","cancelText","onCancel","value","getFieldsValue","asyncRoleUpdateAction","role_name","id","handleUpdateConfirm","form","layout","name","className","rules","required","checkable","checkedKeys","checkStrictly","onCheck","checkKeys","checked","treeData","expandRowByClick","scroll","y","x","rowKey","pagination","params"],"sourceRoot":""}