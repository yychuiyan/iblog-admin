{"version":3,"file":"static/js/642.36911025.chunk.js","mappings":"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","sources":["components/pagination/index.tsx","pages/comment/index.tsx","utils/prompt.ts"],"sourcesContent":["import { ConfigProvider, Pagination } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport zhCN from 'antd/es/locale/zh_CN';\nconst MyPagination = (props: any) => {\n  // 分页总数\n  const [total, setTotal] = useState(0)\n  // 当前第几页\n  const [currentPage, setCurrentPage] = useState(0)\n  // 每页显示条数\n  const [pageSize, setPageSize] = useState(0)\n  useEffect(() => {\n    setTotal(props.total)\n    setCurrentPage(props.currentPage)\n    setPageSize(props.pageSize)\n  }, [props])\n\n  const onChangePage = (page: number, pageSize: number) => {\n    // 将切换的页码参数传递过去\n    props.onChange(page, pageSize)\n  }\n  return (\n    <div>\n      {/* 中文语言包 */}\n      < ConfigProvider locale={zhCN} >\n        <Pagination\n          style={{ textAlign: 'center', paddingTop: '10px', borderTop: '2px solid #fafafa' }}\n          current={currentPage} // 当前页\n          pageSize={pageSize} // 每页条数\n          total={total} // 数据总数\n          pageSizeOptions={[5, 15, 50, 100]} // 每页显示多少条\n          onChange={onChangePage} // 监听pageSize回调\n          showSizeChanger // 展示 pageSize 切换器\n          showQuickJumper // 快速跳转至某页\n          showTotal={total => `共有 ${total} 条数据`} // 展示页码\n        />\n      </ConfigProvider >\n    </div>\n  )\n}\nexport default MyPagination\n","import React, { useEffect, useState } from 'react';\nimport { Button, Input, message, Modal, Table } from 'antd';\nimport type { ColumnsType } from 'antd/es/table';\nimport { DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { Dispatch, bindActionCreators } from 'redux';\nimport * as BlogActions from '@/redux/actionCreator';\nimport MyPagination from '@/components/pagination';\nimport dayjs from 'dayjs';\nimport jwtDecode from 'jwt-decode';\nimport { handleNotDelete } from '@/utils/prompt';\nconst { confirm } = Modal;\nconst { Search } = Input;\n\ninterface DataType {\n  targetReplayContent: string;\n  currentReplayContent: string;\n  children: DataType[] | string;\n  key?: React.Key;\n  _id: string;\n  username?: string;\n  avatar?: string;\n  articleIds?: string[];\n  createTime: string;\n  updateTime: string;\n}\ninterface CommentData {\n  totalCount: number;\n  page: number;\n  pageSize: number;\n  data: DataType[];\n}\nconst Comments = (props: any) => {\n  const token = jwtDecode(localStorage.getItem('token') as string) as object | any;\n  const role_type = token[0].role[0].role_type\n  const columns: ColumnsType<DataType> = [\n    {\n      title: '文章标题',\n      dataIndex: 'articleTitle',\n      fixed: 'left',\n      width: '20rem',\n    },\n    {\n      title: '昵称',\n      dataIndex: 'nickName',\n      width: 150,\n    },\n    {\n      title: '当前回复内容',\n      dataIndex: 'currentReplayContent',\n      render: (_, record) => {\n        return <p className='introduction' style={{ width: '10rem' }}>{record.currentReplayContent}</p>;\n      },\n    },\n    {\n      title: '目标回复ID',\n      dataIndex: 'targetReplayId',\n      width: '10rem'\n    },\n    {\n      title: '目标回复内容',\n      dataIndex: 'targetReplayContent',\n      render: (_, record) => {\n        return <p className='introduction' style={{ width: '10rem' }}>{record.targetReplayContent}</p>;\n      },\n    },\n\n    {\n      title: '评论时间',\n      dataIndex: 'commentTime',\n      width: '16rem',\n      render: time => {\n        return dayjs(time * 1000).format('YYYY-MM-DD HH:mm:ss');\n      },\n    },\n    {\n      title: '操作',\n      key: 'action',\n      className: 'handle_btn',\n      width: 120,\n      render: item => {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              danger\n              shape=\"circle\"\n              // disabled={role_type}\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                commentDelete(item);\n              }}\n              style={{ marginRight: '5px' }}\n            />\n          </div>\n        );\n      },\n    },\n  ];\n\n  // 评论列表\n  const [list, setList] = useState<DataType[]>([]);\n  // 分页总数\n  const [total, setTotal] = useState(0);\n  // 当前第几页\n  const [currentPage, setCurrentPage] = useState(1);\n  // 每页显示条数\n  const [pageSize, setPageSize] = useState(15);\n  // 获取评论列表数据\n  useEffect(() => {\n    props.BlogActions.asyncCommentsAction(currentPage, pageSize, '').then((res: CommentData) => {\n      // 获取评论\n      const { data, totalCount, page, pageSize } = res.data as unknown as CommentData;\n      // 无子节点情况下，按钮\n      data.forEach((item) => {\n        if (item.children.length === 0) {\n          item.children = '';\n        }\n      });\n      setList(data);\n      setTotal(totalCount);\n      setCurrentPage(page);\n      setPageSize(pageSize);\n    });\n  }, [currentPage, pageSize, props.BlogActions]);\n  // 删除评论\n  const commentDelete = (item: DataType) => {\n    confirm({\n      title: '你确定要删除吗?',\n      icon: <ExclamationCircleOutlined />,\n      onOk() {\n        if (role_type) {\n          return handleNotDelete();\n        }\n        // 先将要删除的数据过滤掉再调用接口\n        setList(list.filter((it: { _id: string }) => it._id !== item._id));\n        message.success('评论删除成功');\n        props.BlogActions.asyncCommentDeleteAction(item._id).then(() => {\n          props.BlogActions.asyncCommentsAction(currentPage, pageSize, '').then((res: CommentData) => {\n            // 获取评论\n            const { data, totalCount, page, pageSize } = res.data as unknown as CommentData;\n            setList(data);\n            setTotal(totalCount);\n            setCurrentPage(page);\n            setPageSize(pageSize);\n          });\n        });\n      },\n    });\n  };\n  // 搜索\n  const onSearch = (articleTitle: string) => {\n    props.BlogActions.asyncCommentsAction(currentPage, pageSize, articleTitle).then((res: CommentData) => {\n      const { data, totalCount, page, pageSize } = res.data as unknown as CommentData;\n      setList(data);\n      setTotal(totalCount);\n      setCurrentPage(page);\n      setPageSize(pageSize);\n    });\n  };\n\n  // 跳转页数据显示\n  const onChangePage = (page: number, pageSize: number, params = '') => {\n    // 重新调用接口将参数传递过去\n    props.BlogActions.asyncCommentsAction(page, pageSize, params).then((res: CommentData) => {\n      // 获取列表数据\n      let { data } = res.data as unknown as CommentData;\n      setList(data);\n      // 切换行\n      setCurrentPage(page);\n      // 根据页面数据显示页码\n      setPageSize(pageSize);\n    });\n  };\n  return (\n    <div>\n      <div className=\"title\">\n        <div></div>\n        <div className=\"search_box\">\n          <Search\n            className=\"search\"\n            allowClear\n            placeholder=\"请输入文章名称\"\n            onSearch={onSearch}\n            enterButton\n          />\n        </div>\n      </div>\n      <Table\n        columns={columns}\n        dataSource={list}\n        scroll={{ y: 'calc(100vh - 240px)', x: true }}\n        rowKey={(item: DataType) => {\n          return item._id;\n        }}\n        pagination={false}\n      />\n      <MyPagination\n        pageSize={pageSize}\n        currentPage={currentPage}\n        total={total}\n        onChange={onChangePage}\n      ></MyPagination>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    BlogActions: bindActionCreators(BlogActions, dispatch),\n  };\n};\nexport default connect(null, mapDispatchToProps)(Comments);\n","import { message } from 'antd';\n\n// 禁止操作项\nexport const handleNotDelete = () => {\n  return message.warning('访客暂不支持删除操作😅');\n};\nexport const handleNotUpdate = () => {\n  return message.warning('访客暂不支持更新操作😅');\n};\nexport const handleNotAdd = () => {\n  return message.warning('访客暂不支持添加操作😅');\n};\nexport const handleNotAudit = () => {\n  return message.warning('访客暂不支持审批操作😅');\n};\nexport const handleNotAllAudit = () => {\n  return message.warning('访客暂不支持一键审批操作😅');\n};\nexport const onNotChangePublishStatus = () => {\n  return message.warning('访客暂不支持下线文章操作😅');\n};\nexport const onNotChangePublishLineStatus = () => {\n  return message.warning('访客暂不支持上线文章操作😅');\n};\nexport const onNotChangeStatus = () => {\n  return message.warning('访客暂不支持置顶操作😅');\n};\nexport const handleNotChangeStatus = () => {\n  return message.warning('访客暂不支持状态变更操作😅');\n};\nexport const handleNotSave = () => {\n  return message.warning('访客暂不支持发布操作😅');\n};\nexport const handleNotSaveArticle = () => {\n  return message.warning('访客暂不支持发布文章操作😅');\n};\nexport const handleNotSaveDraft = () => {\n  return message.warning('访客暂不支持保存草稿操作😅');\n};\nexport const handleNotUpload = () => {\n  return message.warning('访客暂不支持上传图片操作😅');\n};\nexport const handleNotLike = () => {\n  return message.warning('访客暂不支持输入图片链接操作😅');\n};\n"],"names":["props","total","setTotal","useState","currentPage","setCurrentPage","pageSize","setPageSize","useEffect","locale","zhCN","style","textAlign","paddingTop","borderTop","current","pageSizeOptions","onChange","page","showSizeChanger","showQuickJumper","showTotal","confirm","Modal","Search","Input","connect","dispatch","BlogActions","bindActionCreators","role_type","jwtDecode","localStorage","getItem","role","columns","title","dataIndex","fixed","width","render","_","record","className","currentReplayContent","targetReplayContent","time","dayjs","format","key","item","type","danger","shape","icon","onClick","commentDelete","marginRight","list","setList","asyncCommentsAction","then","res","data","totalCount","forEach","children","length","onOk","handleNotDelete","filter","it","_id","message","asyncCommentDeleteAction","allowClear","placeholder","onSearch","articleTitle","enterButton","dataSource","scroll","y","x","rowKey","pagination","params","handleNotUpdate","handleNotAdd","handleNotAudit","handleNotAllAudit","onNotChangePublishStatus","onNotChangePublishLineStatus","onNotChangeStatus","handleNotChangeStatus","handleNotSave","handleNotSaveArticle","handleNotSaveDraft","handleNotUpload","handleNotLike"],"sourceRoot":""}