{"version":3,"file":"static/js/669.c51f6a32.chunk.js","mappings":"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","sources":["components/pagination/index.tsx","components/uploadMany/index.tsx","pages/essay/index.tsx","utils/prompt.ts"],"sourcesContent":["import { ConfigProvider, Pagination } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport zhCN from 'antd/es/locale/zh_CN';\nconst MyPagination = (props: any) => {\n  // 分页总数\n  const [total, setTotal] = useState(0)\n  // 当前第几页\n  const [currentPage, setCurrentPage] = useState(0)\n  // 每页显示条数\n  const [pageSize, setPageSize] = useState(0)\n  useEffect(() => {\n    setTotal(props.total)\n    setCurrentPage(props.currentPage)\n    setPageSize(props.pageSize)\n  }, [props])\n\n  const onChangePage = (page: number, pageSize: number) => {\n    // 将切换的页码参数传递过去\n    props.onChange(page, pageSize)\n  }\n  return (\n    <div>\n      {/* 中文语言包 */}\n      < ConfigProvider locale={zhCN} >\n        <Pagination\n          style={{ textAlign: 'center', paddingTop: '10px', borderTop: '2px solid #fafafa' }}\n          current={currentPage} // 当前页\n          pageSize={pageSize} // 每页条数\n          total={total} // 数据总数\n          pageSizeOptions={[5, 15, 50, 100]} // 每页显示多少条\n          onChange={onChangePage} // 监听pageSize回调\n          showSizeChanger // 展示 pageSize 切换器\n          showQuickJumper // 快速跳转至某页\n          showTotal={total => `共有 ${total} 条数据`} // 展示页码\n        />\n      </ConfigProvider >\n    </div>\n  )\n}\nexport default MyPagination\n","import React, { useEffect, useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Modal, Upload, message } from 'antd';\nimport type { RcFile, UploadProps } from 'antd/es/upload';\nimport type { UploadFile } from 'antd/es/upload/interface';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as BlogActions from '@/redux/actionCreator';\nimport { handleNotUpload } from '@/utils/prompt';\nimport jwtDecode from 'jwt-decode';\nconst getBase64 = (file: RcFile): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result as string);\n    reader.onerror = (error) => reject(error);\n  });\n\nconst UploadMany: React.FC = (props: any) => {\n  const token = jwtDecode(localStorage.getItem('token') as string) as object | any;\n  const role_type = token[0].role[0].role_type\n\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('');\n  const [fileList, setFileList] = useState<any>([]);\n\n\n  // 图片赋值\n  useEffect(() => {\n    let newImgUrl = props.imgUrlArr !== undefined ? props.imgUrlArr.map((item: any) => {\n      return {\n        name: item.name,\n        thumbUrl: item.thumbUrl,\n        uid: item.uid\n      }\n    }) : []\n    setFileList(newImgUrl);\n  }, [props.imgUrlArr]);\n\n  const handleCancel = () => setPreviewOpen(false);\n\n  const handlePreview = async (file: UploadFile) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj as RcFile);\n    }\n\n    setPreviewImage(file.url || (file.preview as string));\n    setPreviewOpen(true);\n    setPreviewTitle(file.name || file.url!.substring(file.url!.lastIndexOf('/') + 1));\n  };\n\n  const handleChangeMany: UploadProps['onChange'] = ({ fileList: newFileList }) => {\n    if (role_type) {\n      return false\n    }\n    setFileList(newFileList);\n  }\n\n  const handleUpload = (data: any) => {\n    props.BlogActions.asyncFileUploadAction(data).then((result: any) => {\n      message.success('上传成功');\n      setFileList([...fileList, result])\n      if (result) {\n        props.handleChange(result);\n      }\n    });\n  }\n  // 删除图片\n  const hanleRemove = (val: any) => {\n    props.handleRemove(val)\n    // setFileList([]);\n  }\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n  return (\n    <>\n      <Upload\n        listType=\"picture-card\"\n        fileList={fileList}\n        customRequest={role_type ? handleNotUpload : handleUpload}\n        onPreview={handlePreview}\n        onChange={handleChangeMany}\n        onRemove={hanleRemove}\n      >\n        {fileList?.length >= 9 ? null : uploadButton}\n      </Upload>\n      <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\n        <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n      </Modal>\n    </>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    BlogActions: bindActionCreators(BlogActions, dispatch),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(UploadMany);\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Button, Form, Input, message, Modal, Table } from 'antd';\nimport type { ColumnsType } from 'antd/es/table';\nimport { DeleteOutlined, ExclamationCircleOutlined, EditOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { Dispatch, bindActionCreators } from 'redux';\nimport * as BlogActions from '@/redux/actionCreator';\nimport MyPagination from '@/components/pagination';\nimport dayjs from 'dayjs';\nimport jwtDecode from 'jwt-decode';\nimport UploadImage from '@/components/uploadMany';\nimport Editor from 'for-editor';\nimport { handleNotAdd, handleNotDelete, handleNotUpdate } from '@/utils/prompt';\nconst { confirm } = Modal;\nconst { Search } = Input;\ninterface CoverData {\n  url: string;\n  name: string;\n  thumbUrl: string;\n}\ninterface DataType {\n  key: React.Key;\n  _id: string;\n  content?: string;\n  createTime: string;\n  updateTime: string;\n}\ninterface EssayData {\n  cover: string;\n  totalCount: number;\n  page: number;\n  pageSize: number;\n  data: DataType[];\n}\nconst Essay = (props: any) => {\n  const token = jwtDecode(localStorage.getItem('token') as string) as object | any;\n  const role_type = token[0].role[0].role_type\n  const columns: ColumnsType<DataType> = [\n    {\n      title: '随笔',\n      dataIndex: 'content',\n      render: (_, record) => {\n        return <p className='introduction' style={{ width: '40rem' }}>{record.content}</p>;\n      },\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'createTime',\n      render: time => {\n        return dayjs(time * 1000).format('YYYY-MM-DD HH:mm:ss');\n      },\n    },\n    {\n      title: '更新时间',\n      dataIndex: 'updateTime',\n      render: time => {\n        return time === 0 ? time : dayjs(time * 1000).format('YYYY-MM-DD HH:mm:ss');\n      },\n    },\n    {\n      title: '操作',\n      key: 'action',\n      className: 'handle_btn',\n      render: item => {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              danger\n              shape=\"circle\"\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                essayDelete(item);\n              }}\n              style={{ marginRight: '5px' }}\n            />\n            <Button\n              type=\"primary\"\n              ghost\n              shape=\"circle\"\n              icon={<EditOutlined />}\n              onClick={() => {\n                essayUpdate(item);\n              }}\n              style={{ marginRight: '5px' }}\n            />\n          </div>\n        );\n      },\n    },\n  ];\n  // 表单数据\n  const [form] = Form.useForm();\n  // 更新表单\n  const [updateForm] = Form.useForm();\n  // 随笔列表\n  const [list, setList] = useState<DataType[]>([]);\n  // 分页总数\n  const [total, setTotal] = useState(0);\n  // 当前第几页\n  const [currentPage, setCurrentPage] = useState(1);\n  // 每页显示条数\n  const [pageSize, setPageSize] = useState(15);\n  // 窗口\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  // 更新窗口\n  const [isModalUpdateOpen, setIsModalUpdateOpen] = useState(false);\n  // 图片\n  const [imageList, setImageList] = useState<any>([]);\n  // 图片地址\n  const [imgUrl, setImgUrl] = useState<any>([]);\n  // 保存当前更新的数据\n  const [editData, setEditData] = useState({});\n  // 定义ref\n  const editorRef = useRef<any>();\n  // 获取随笔列表数据\n  useEffect(() => {\n    props.BlogActions.asyncEssayListAction(currentPage, pageSize, '').then((res: EssayData) => {\n      // 获取随笔\n      let { data, totalCount, page, pageSize } = res.data as unknown as EssayData;\n      setList(data);\n      setTotal(totalCount);\n      setCurrentPage(page);\n      setPageSize(pageSize);\n    });\n  }, [currentPage, pageSize, props.BlogActions]);\n\n  // 添加随笔\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n  // 点击确定按钮添加\n  const handleConfirm = async () => {\n    if (role_type) {\n      return handleNotAdd()\n    }\n    // 校验form值 校验通过后获取值\n    await form.validateFields();\n    // 获取表单值\n    const datas = form.getFieldsValue();\n\n    datas.cover = imageList\n\n    let coverArray = datas.cover.map((item: CoverData) => {\n      return {\n        name: item.name,\n        thumbUrl: item.thumbUrl\n      }\n    })\n    let newData = {\n      content: datas.content,\n      cover: coverArray\n    }\n\n    props.BlogActions.asyncEssayInsertAction({\n      ...newData,\n    }).then(() => {\n      message.success('添加随笔成功!')\n      setImageList('')\n      form.resetFields();\n      setIsModalOpen(false);\n      // 重新调用查询接口\n      props.BlogActions.asyncEssayListAction(currentPage, pageSize, '').then((res: EssayData) => {\n        let { data } = res.data as unknown as EssayData;\n        setList(data);\n      });\n    });\n  };\n  // 关闭窗口\n  const handleCancel = () => {\n    form.resetFields();\n    setIsModalOpen(false);\n  };\n  // 关闭窗口\n  const handleUpdateCancel = () => {\n    updateForm.resetFields();\n    setIsModalUpdateOpen(false);\n  };\n  // 更新\n  const essayUpdate = (item: EssayData) => {\n    setImageList(item)\n    setImgUrl(item.cover);\n    setIsModalUpdateOpen(true);\n    updateForm.setFieldsValue(item);\n    setEditData(item);\n  };\n  // 提交更新\n  const handleUpdateConfirm = () => {\n    if (role_type) {\n      return handleNotUpdate();\n    }\n    let data = updateForm.getFieldsValue();\n    let coverArray = imageList.cover.map((item: CoverData) => {\n      return {\n        name: item.name,\n        thumbUrl: item.thumbUrl\n      }\n    })\n    let newData = {\n      content: data.content,\n      cover: coverArray\n    }\n\n    props.BlogActions.asyncEssayUpdateAction({\n      ...newData,\n      //@ts-ignore\n      id: editData._id,\n    }).then(() => {\n      message.success('更新成功');\n      props.BlogActions.asyncEssayListAction(currentPage, pageSize, '').then((res: EssayData) => {\n        // 获取随笔\n        let { data, totalCount, page, pageSize } = res.data as unknown as EssayData;\n        setList(data);\n        setTotal(totalCount);\n        setCurrentPage(page);\n        setPageSize(pageSize);\n      });\n      updateForm.resetFields();\n      setIsModalUpdateOpen(false);\n    });\n  };\n  // 删除随笔\n  const essayDelete = (item: DataType) => {\n    confirm({\n      title: '你确定要删除吗?',\n      icon: <ExclamationCircleOutlined />,\n      onOk() {\n        if (role_type) {\n          return handleNotDelete();\n        }\n        // 先将要删除的数据过滤掉再调用接口\n        setList(list.filter((it) => it._id !== item._id));\n        message.success('随笔删除成功');\n        props.BlogActions.asyncEssayDeleteAction(item._id).then(() => {\n          props.BlogActions.asyncEssayListAction(currentPage, pageSize, '').then((res: EssayData) => {\n            // 获取随笔\n            let { data, totalCount, page, pageSize } = res.data as unknown as EssayData;\n            setList(data);\n            setTotal(totalCount);\n            setCurrentPage(page);\n            setPageSize(pageSize);\n          });\n        });\n      },\n    });\n  };\n  // 搜索\n  const onSearch = (value: string) => {\n    props.BlogActions.asyncEssayListAction(currentPage, pageSize, value).then((res: EssayData) => {\n      let { data, totalCount, page, pageSize } = res.data as unknown as EssayData;\n      setList(data);\n      setTotal(totalCount);\n      setCurrentPage(page);\n      setPageSize(pageSize);\n    });\n  };\n  // 跳转页数据显示\n  const onChangePage = (page: number, pageSize: number, params = '') => {\n    // 重新调用接口将参数传递过去\n    props.BlogActions.asyncEssayListAction(page, pageSize, params).then((res: EssayData) => {\n      // 获取列表数据\n      let { data } = res.data as unknown as EssayData;\n      setList(data);\n      // 切换行\n      setCurrentPage(page);\n      // 根据页面数据显示页码\n      setPageSize(pageSize);\n    });\n  };\n\n  // 获取图片信息\n  const handleChange = (data: CoverData) => {\n    let newData = {\n      name: data.name,\n      thumbUrl: data.url\n    }\n    imageList?.cover ? imageList.cover.push(newData) : imageList.push(newData)\n    setImageList(imageList)\n  };\n  // 获取移除的图片信息\n  const handleRemove = (val: { name: string }) => {\n    let newImageList = imageList?.cover ? imageList.cover.filter((item: { name: string }) => item.name !== val.name) : imageList.filter((item: { name: string }) => item.name !== val.name)\n    // imageList.push('')\n    setImageList({\n      ...imageList,\n      cover: newImageList\n    })\n  }\n  // 添加图片\n  const addImg = (file: any) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    // 上传图片接口\n    props.BlogActions.asyncFileUploadAction(formData).then((res: CoverData) => {\n      if (res) {\n        // 如果返回值\n        editorRef.current.$img2Url(file.name, res.url);\n      }\n    });\n  };\n  return (\n    <div>\n      <div className=\"title\">\n        <Button type=\"primary\" onClick={showModal} className=\"btn\">\n          添加随笔\n        </Button>\n        <Search\n          className=\"search\"\n          allowClear\n          placeholder=\"请输入想要查询的随笔\"\n          onSearch={onSearch}\n          enterButton\n        />\n      </div>\n      <Modal\n        open={isModalOpen}\n        className='modal-essay'\n        title={<div style={{ textAlign: 'left' }}>添加随笔</div>}\n        okText=\"添加\"\n        cancelText=\"取消\"\n        onCancel={handleCancel}\n        onOk={() => {\n          handleConfirm();\n        }}\n      >\n        <Form form={form} layout=\"vertical\" name=\"basic\" className=\"userAddFrom\">\n          <Form.Item\n            name=\"content\"\n            // label=\"随笔\"\n            rules={[{ required: true, message: '随笔不能为空' }]}\n          >\n            <Editor\n              preview={false}\n              subfield={false}\n              placeholder=\"请撰写随笔内容\"\n              ref={editorRef}\n              addImg={file => addImg(file)}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"cover\"\n            // label=\"随笔图片\"\n          >\n            {/* @ts-ignore */}\n            <UploadImage handleChange={handleChange} handleRemove={handleRemove} />\n          </Form.Item>\n        </Form>\n      </Modal>\n      <Modal\n        open={isModalUpdateOpen}\n        title={<div style={{ textAlign: 'left' }}>更新随笔</div>}\n        okText=\"更新\"\n        className='modal-essay'\n        cancelText=\"取消\"\n        onCancel={handleUpdateCancel}\n        onOk={() => {\n          handleUpdateConfirm();\n        }}\n      >\n        <Form form={updateForm} layout=\"vertical\" name=\"basic\" className=\"userAddFrom\">\n          <Form.Item\n            name=\"content\"\n            // label=\"随笔\"\n            rules={[{ required: true, message: '随笔不能为空' }]}\n          >\n            <Editor\n              preview={false}\n              subfield={false}\n              placeholder=\"请撰写随笔内容\"\n              ref={editorRef}\n              addImg={file => addImg(file)}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"cover\"\n            // label=\"文章封面\"\n          >\n            {/* @ts-ignore */}\n            <UploadImage imgUrlArr={imgUrl} handleChange={handleChange} handleRemove={handleRemove} />\n          </Form.Item>\n        </Form>\n      </Modal>\n      <Table\n        columns={columns}\n        dataSource={list}\n        scroll={{ y: 'calc(100vh - 240px)', x: true }}\n        rowKey={(item) => {\n          return item._id + Date.now();\n        }}\n        pagination={false}\n      />\n      <MyPagination\n        pageSize={pageSize}\n        currentPage={currentPage}\n        total={total}\n        onChange={onChangePage}\n      ></MyPagination>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    BlogActions: bindActionCreators(BlogActions, dispatch),\n  };\n};\nexport default connect(null, mapDispatchToProps)(Essay);\n","import { message } from 'antd';\n\n// 禁止操作项\nexport const handleNotDelete = () => {\n  return message.warning('访客暂不支持删除操作😅');\n};\nexport const handleNotUpdate = () => {\n  return message.warning('访客暂不支持更新操作😅');\n};\nexport const handleNotAdd = () => {\n  return message.warning('访客暂不支持添加操作😅');\n};\nexport const handleNotAudit = () => {\n  return message.warning('访客暂不支持审批操作😅');\n};\nexport const handleNotAllAudit = () => {\n  return message.warning('访客暂不支持一键审批操作😅');\n};\nexport const onNotChangePublishStatus = () => {\n  return message.warning('访客暂不支持下线文章操作😅');\n};\nexport const onNotChangePublishLineStatus = () => {\n  return message.warning('访客暂不支持上线文章操作😅');\n};\nexport const onNotChangeStatus = () => {\n  return message.warning('访客暂不支持置顶操作😅');\n};\nexport const handleNotChangeStatus = () => {\n  return message.warning('访客暂不支持状态变更操作😅');\n};\nexport const handleNotSave = () => {\n  return message.warning('访客暂不支持发布操作😅');\n};\nexport const handleNotSaveArticle = () => {\n  return message.warning('访客暂不支持发布文章操作😅');\n};\nexport const handleNotSaveDraft = () => {\n  return message.warning('访客暂不支持保存草稿操作😅');\n};\nexport const handleNotUpload = () => {\n  return message.warning('访客暂不支持上传图片操作😅');\n};\nexport const handleNotLike = () => {\n  return message.warning('访客暂不支持输入图片链接操作😅');\n};\n"],"names":["props","total","setTotal","useState","currentPage","setCurrentPage","pageSize","setPageSize","useEffect","locale","zhCN","style","textAlign","paddingTop","borderTop","current","pageSizeOptions","onChange","page","showSizeChanger","showQuickJumper","showTotal","connect","dispatch","BlogActions","bindActionCreators","role_type","jwtDecode","localStorage","getItem","role","previewOpen","setPreviewOpen","previewImage","setPreviewImage","previewTitle","setPreviewTitle","fileList","setFileList","newImgUrl","undefined","imgUrlArr","map","item","name","thumbUrl","uid","uploadButton","PlusOutlined","marginTop","listType","customRequest","handleNotUpload","data","asyncFileUploadAction","then","result","message","handleChange","onPreview","async","file","url","preview","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","error","getBase64","originFileObj","substring","lastIndexOf","newFileList","onRemove","val","handleRemove","length","open","title","footer","onCancel","alt","width","src","confirm","Modal","Search","Input","columns","dataIndex","render","_","record","className","content","time","dayjs","format","key","type","danger","shape","icon","DeleteOutlined","onClick","essayDelete","marginRight","ghost","EditOutlined","essayUpdate","form","Form","updateForm","list","setList","isModalOpen","setIsModalOpen","isModalUpdateOpen","setIsModalUpdateOpen","imageList","setImageList","imgUrl","setImgUrl","editData","setEditData","editorRef","useRef","asyncEssayListAction","res","totalCount","cover","setFieldsValue","ExclamationCircleOutlined","onOk","handleNotDelete","filter","it","_id","asyncEssayDeleteAction","newData","push","newImageList","addImg","formData","FormData","append","$img2Url","allowClear","placeholder","onSearch","value","enterButton","okText","cancelText","resetFields","handleNotAdd","validateFields","datas","getFieldsValue","coverArray","asyncEssayInsertAction","handleConfirm","layout","rules","required","subfield","ref","handleNotUpdate","asyncEssayUpdateAction","id","handleUpdateConfirm","dataSource","scroll","y","x","rowKey","Date","now","pagination","params","handleNotAudit","handleNotAllAudit","onNotChangePublishStatus","onNotChangePublishLineStatus","onNotChangeStatus","handleNotChangeStatus","handleNotSave","handleNotSaveArticle","handleNotSaveDraft","handleNotLike"],"sourceRoot":""}